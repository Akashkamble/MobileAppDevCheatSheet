StaticLayout 
used to draw text on canvas with autowrapping facility, 
because canvas.drawText doesn't considers the bounds and so the text is off the screen. 

LiveWallaper (Create)
class YourLiveWallpaper extends WallpaperService{
  constructor{
    timerTask{
      draw()
    }
  }

  void draw(){
    Canvas canvas = getSurfaceView().canvas
    staticLayout.draw(canvas)
  }
}

Room - JetPack
========================================================
Types
Entity    : Represents a table within the database
Dao       : DAOs are responsible for defining the methods that access the database
Database  : Contains the database holder and serves as the main access point

@Entity( tableName = "", foreignKeys = "", indices = "" ) - every model class for Room 
class Employee{
  @PrimaryKey(autoGenerate = true)
  int empId
  
  @ColumnInfo(name = “column_name”)
  String name;
  
  @Ignore — field will not be persisted by Room
  String type;
  
  @Embeded — nested fields can be referenced directly in the SQL queries.
}

DAO 
interface EmployeeDao{
  @Query("SELECT * FROM EMPLOYEE LIMIT :limit")
  fun(limit: Int) : List<Employee>
  
  @Insert(onConflict = OnConflictStrategy.IGNORE)
  fun(user: User) : Long
  
  @Update 
  @Delete   
  
  @Transaction
  fun upsert(user: User) {
        long id = insert(obj);
        if (id == -1) {
            update(obj);
        }
  }
}

Database 
@Database()
public abstract class CompanyDatabase extends RoomDatabase{
  public EmployeeDao getInstance(Context context){
    return Room.databaseBuilder(applicationContext, CompanyDatabase.class)
           .fallbackDestructiveMigrations()
           .build();
  }
  
  
  public abstract EmployeeDao employeeDao()
}
  
  

